#@ load("@ytt:data", "data")
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGateway
metadata:
  name: $(workload.metadata.name)$-gateway
spec:
  api:
    serverUrl: https://$(workload.metadata.name)$-gateway.example.com
    title: $(workload.metadata.name)$ micro gateway
    description: Micro Gateway to control internal APIs of $(workload.metadata.name)$
    version: 0.1.0
    cors:
      allowedOrigins:
        - api-portal.example.com
#@ if data.values.gwSLA == "localdev":
  count: 1
#@ end
#@ if data.values.gwSLA == "teamdev":
  count: 2
#@ end
#@ if data.values.gwSLA == "integration":
  count: 3
#@ end
#@ if data.values.gwSLA == "production":
  count: 4
#@ end

  sso:
    secret: sso-secret
#@ if data.values.gwMetrics:
  observability:
    metrics:
      wavefront:
        enabled: true
    wavefront:
      secret: wavefront-secret
      source: $(workload.metadata.name)$-gateway
      application: $(workload.metadata.name)$
      service: $(workload.metadata.name)$-gateway
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: true
          labels:
            release: $(workload.metadata.name)$-prometheus"
#@ end

#@ if data.values.gwSLA == "integration" or data.values.gwSLA == "production":
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGateway
metadata:
  name: brownfield-gateway
spec:
  count: 1
  api:
    serverUrl: https://brownfield.example.com 
    title: Micro-gateway to contorl 3rd party/legacy API access
    version: 0.1.0
    extensions:
    secretsProviders:
      - name: vault-jwt-keys
        vault:
          roleName: scg-role
    filter:
      jwtKey:
        enabled: true
        secretsProviderName: vault-jwt-keys   
---
apiVersion: v1
kind: Service
metadata:
  name: brownfield-proxy
spec:
  ports:
    - port: 80
      targetPort: 80
#@ end
